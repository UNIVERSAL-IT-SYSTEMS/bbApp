# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.57.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."

    cocoapods
  end

  desc "Responsible for building and signing the app"
  private_lane :build_app do |options|
    #Download the provisioning profile for the app
    sigh(output_path: "./fastlane/profiles") #Dist profile

    #Download the provisioning profile
    sigh(
    output_path: "./fastlane/profiles",
    app_identifier: "com.bneibaruch.Kabbalah"
    )

    increment_build_number #version bump

    gym (
    workspace: "Kabbalah.xcworkspace",
    scheme: "Release"
    )
  end

  desc "Runs all the tests"
  lane :test do
    scan
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  desc "This action will also do a build version bump and push it to git."
  lane :beta do
    build_app

    deliver(
    skip_deploy: true,
    beta: true
    )

    commit_version_bump(
    message: 'Build version Bump by fastlane',
    force: true
    )
    build_number = Actions.lane_context[Actions::SharedValues::BUILD_NUMBER]
    add_git_tag(tag: "testflight-#{build_number}")

    push_to_git_remote
    # match(type: "appstore") # more information: https://codesigning.guide
    # gym # Build your app - more options available
    # pilot

    # sh "your_script.sh"
    # You can also use other beta testing services here (run `fastlane actions`)
  end

  desc "Deploy a new version to the App Store"
  lane :appstore do
    # match(type: "appstore")
    snapshot

    build_app

    deliver(
    skip_deploy: true,
    force: true
    )

    commit_version_bump(
    message: 'Version Bump by fastlane',
    force: true
    )

    build_number = Actions.lane_context[Actions::SharedValues::BUILD_NUMBER]
    add_git_tag(tag: "appstore-#{build_number}")

    push_to_git_remote
    # gym # Build your app - more options available
    # deliver(force: true)
    # frameit
  end

  # You can define as many lanes as you want

  after_all do |lane|
    # This block is called, only if the executed lane was successful
    slack (
    message: "fastlane was successful :rocket:",
    success: true,
    default_payloads: [:lane, :git_branch, :git_author]
    )

    clean_build_artifacts(
    execute_pattern: ".*\.mobileprovision" #don't clear provisioning profiles
    )
    # slack(
    #   message: "Successfully deployed new App Update."
    # )
  end

  error do |lane, exception|
    slack(
      message: exception.message,
      success: false
    )
  end
end



# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/docs/Platforms.md
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
