# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/docs
# All available actions: https://github.com/fastlane/fastlane/blob/master/docs/Actions.md
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# By default, fastlane will send which actions are used
# No personal data is shared, more information on https://github.com/fastlane/enhancer
# Uncomment the following line to opt out
# opt_out_usage

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "1.57.0"

default_platform :ios

platform :ios do
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."

    ensure_git_status_clean
    cocoapods
    increment_build_number
  end

desc "Installs FixCode which disables the \"Fix Issue\" button in Xcode"
  lane :xcode do
    install_xcode_plugin(
      url: "https://github.com/fastlane/FixCode/releases/download/0.2.0/FixCode.xcplugin.zip"
    )
  end

desc "Fetches the provisioning profiles so you can build locally and deploy to your device"
  lane :certs do
    match(app_identifier: "com.bneibaruch.Kabbalah-Development", type: "development")
    match(app_identifier: "com.bneibaruch.Kabbalah-AdHoc", type: "appstore")
    match(app_identifier: "com.bneibaruch.Kabbalah-AppStore", type: "appstore")
  end

desc "Creates new screenshots and uploads them to iTunes Connect"
  lane :screens do
    cocoapods
    match(app_identifier: "com.bneibaruch.Kabbalah-Development", type: "development")
    snapshot
    frameit
    deliver(app: 550938690, app_identifier: "com.bneibaruch.Kabbalah-AppStore", skip_metadata: true, force: true)
  end

desc "Submits a new Beta Build to Apple TestFlight"
  lane :beta do
    cocoapods
    match(app_identifier: "com.bneibaruch.Kabbalah-AdHoc", type: "appstore")
    gym(scheme: "Kabbalah", workspace: "Kabbalah.xcworkspace", configuration: "Beta", clean: true)
    pilot(username: "gabomorales@me.com", app_identifier: "com.bneibaruch.Kabbalah-AdHoc")
    # clean_build_artifacts
    fabric(scheme: "Testing")
  end

desc "Deploys a new version to the App Store"
  lane :deploy do
    cocoapods
    snapshot
    match(app_identifier: "com.bneibaruch.Kabbalah-AppStore", type: "appstore")
    gym(scheme: "Kabbalah", workspace: "Kabbalah.xcworkspace", configuration: "Release", clean: true)
    deliver(force: true)
  end

    #------------------------- Crashlytics -------------------------#

  private_lane :fabric do |options|
    scheme = options[:scheme]

    sigh(
      skip_install: true,
      development: true
    )

    build(
      scheme: scheme, 
      signId: ENV['SIGNING_IDENTITY_DEV']
    )

    environment = scheme.upcase

    crashlytics(
      ipa_path: "../Kabbalah.ipa",
      notes: "Running on #{environment}",
      groups: ['bb-test']
    )

    # post_to_slack(scheme: scheme, destination: "Crashlytics")
  end

  after_all do |lane|
    # This block is called, only if the executed lane was successful
  end
end

